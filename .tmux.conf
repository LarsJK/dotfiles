#/usr/local/bin/zsh Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind - split-window -v -c '#{pane_current_path}'
bind \ split-window -h -c '#{pane_current_path}'

bind c new-window -c '#{pane_current_path}'

# remap prefix to Control + s
set -g prefix C-s
unbind C-b
bind C-s send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# mouse support
set -g mouse on

set-option -g status-keys "emacs"

set -g base-index 1
set -g renumber-windows on

# dim statusbar
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'
set -g status-left-length 50
set -g status-right "#(date '+%a, %b %d - %I:%M')"


# Pane interaction
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Up resize-pane -U 1
bind -n S-Down resize-pane -D 1

# Copy-paste integration
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# Use vim keybindings in copy mode
# setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
# bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
